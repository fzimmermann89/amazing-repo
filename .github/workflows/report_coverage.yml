name: Coverage Report

on:
  workflow_run:
    workflows:
      - Sphinx Docs
    types:
      - completed

permissions:
  actions: read
  issues: write
  contents: write
  pull-requests: write

jobs:
  coverage_report:
    name: Coverage report
    runs-on: ubuntu-latest
    steps:
      # download artifacts from the test job in the pytest.yml workflow
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: .coverage
          name: pytest-coverage

      - name: Post PyTest Coverage Comment
        uses: MishaKav/pytest-coverage-comment@v1.1.53
        with:
          pytest-coverage-path: ./coverage/pytest-coverage.txt
          junitxml-path: ./coverage/pytest.xml

      # - name: Create Coverage Badge on Main Branch Push
      #   uses: schneegans/dynamic-badges-action@v1.7.0
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   with:
      #     auth: ${{ secrets.GIST_SECRET }}
      #     gistID: 48e334a10caf60e6708d7c712e56d241
      #     filename: coverage.json
      #     label: Coverage Report
      #     message: ${{ steps.coverageComment.outputs.coverage }}
      #     color: ${{ steps.coverageComment.outputs.color }}
      #     namedLogo: python

      # - name: Set Pipeline Status Based on Test Results
      #   if: steps.coverageComment.outputs.errors != 0 || steps.coverageComment.outputs.failures != 0
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       core.setFailed("PyTest workflow failed with ${{ steps.coverageComment.outputs.errors }} errors and ${{ steps.coverageComment.outputs.failures }} failures.")
